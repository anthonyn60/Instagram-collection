{
    "swagger": "2.0",
    "info": {
        "title": "Instagram Collection API",
        "description": "Create Instagram collections and view them",
        "version": "1.0.0"
    },
    "host": "instagram-collection-backend.herokuapp.com",
    "schemes": [
        "http"
    ],
    "basePath": "/api/v1",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/collections": {
            "get": {
                "summary": "Get the collection and posts created for that collection id.",
                "description": "Used to retrieve all existing collections.\n",
                "tags": [
                    "Collections"
                ],
                "responses": {
                    "200": {
                        "description": "A list of collections including the first picture.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Collections"
                            }
                        }
                    },
                    "404": {
                        "description": "No posts were found for that collection or page.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Post a new collection and retrieve posts for that collection.",
                "tags": [
                    "Collections"
                ],
                "description": "Used to post a new collection and retrieve that collection's posts. In the case where the collection already exists (collection name, start, end, and tag are the same), the endpoint will return the existing posts. The request validates the tag format, as well as the start time being before the end time. The name parameter is optional.\n",
                "parameters": [
                    {
                        "name": "collection",
                        "in": "body",
                        "description": "Collection object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Collection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A collection object which contains posts.",
                        "schema": {
                            "$ref": "#/definitions/Collection_Obj"
                        }
                    },
                    "404": {
                        "description": "No posts were found for that collection or page.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/collections/{id}": {
            "get": {
                "summary": "Get the collection and posts created for that collection id.",
                "description": "Used to retrieve an existing collection's posts, paginated (max per page is 9). If the page requested is outside the number of pages, the application will populate the database with additional posts until either the requested page is filled, or there aren't enough posts to reach this page (where it'll give an error).\n",
                "tags": [
                    "Collections"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Collection ID",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "number",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A collection object which contains posts.",
                        "schema": {
                            "$ref": "#/definitions/Collection_Obj"
                        }
                    },
                    "404": {
                        "description": "No posts were found for that collection or page.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Posts": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "insta_link": {
                    "description": "Link to Instagram page",
                    "type": "string"
                },
                "insta_id": {
                    "type": "string"
                },
                "media": {
                    "description": "Link to actual media",
                    "type": "string"
                },
                "media_type": {
                    "description": "Video or image",
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "caption": {
                    "type": "string"
                },
                "tag_time": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Collection_Obj": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "start_time": {
                    "description": "Start time, epoch.",
                    "type": "integer",
                    "format": "int32"
                },
                "end_time": {
                    "description": "Start time, epoch.",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "Name of collection.",
                    "type": "string"
                },
                "tag": {
                    "description": "Hashtag"
                },
                "current_count": {
                    "description": "Number of posts currently in the database",
                    "type": "integer",
                    "format": "int32"
                },
                "get_next_url": {
                    "description": "Next URL for Instagram post loading.",
                    "type": "string",
                    "format": "string"
                },
                "posts": {
                    "description": "Posts within the collection.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Posts"
                    }
                }
            }
        },
        "Collections": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "start_time": {
                    "description": "Start time, epoch.",
                    "type": "integer",
                    "format": "int32"
                },
                "end_time": {
                    "description": "Start time, epoch.",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "Name of collection.",
                    "type": "string"
                },
                "tag": {
                    "description": "Hashtag",
                    "type": "string"
                },
                "next_url": {
                    "description": "URL for next images to check",
                    "type": "string"
                },
                "media_link": {
                    "description": "Link for first image",
                    "type": "string"
                },
                "created_at": {
                    "description": "Time collection was created",
                    "type": "string"
                }
            }
        },
        "Collection": {
            "type": "object",
            "properties": {
                "start_time": {
                    "description": "Start time, epoch.",
                    "type": "integer",
                    "format": "int32"
                },
                "end_time": {
                    "description": "Start time, epoch.",
                    "type": "integer",
                    "format": "int32"
                },
                "tag": {
                    "description": "Instagram Hashtag",
                    "type": "string"
                },
                "name": {
                    "description": "Name of collection.",
                    "type": "string"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            }
        }
    }
}